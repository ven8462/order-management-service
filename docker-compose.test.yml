services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        INSTALL_DEV: "true"
    command: >
      sh -c "
        python manage.py migrate --settings=config.settings &&
        poetry run pytest -v
      "
    volumes:
      - .:/app
    env_file:
      - .env.test
    depends_on:
      db:
        condition: service_healthy
      kafka:
        condition: service_started
      redis:
        condition: service_healthy

  db:
    image: postgres:15
    environment:
      POSTGRES_USER: valary
      POSTGRES_PASSWORD: password
      POSTGRES_DB: test_order_management_service
    ports:
      - "5435:5432"
    volumes:
      - postgres_data_test:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U valary -d test_order_management_service"]
      interval: 5s
      retries: 5

  zookeeper:
    image: confluentinc/cp-zookeeper:7.6.1
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2182:2181"

  redis:
    image: redis:7
    ports:
      - "6380:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      retries: 5

  kafka:
    image: confluentinc/cp-kafka:7.6.1
    depends_on:
      - zookeeper
    ports:
      - "9093:9092"
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CREATE_TOPICS: "payments:1:1"

volumes:
  postgres_data_test: