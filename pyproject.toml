[tool.poetry]
name = "order-management-service"
version = "0.1.0"
description = "Order management service built with FastAPI, Kafka, and SQLAlchemy."
authors = ["Your Team <team@example.com>"]
readme = "README.md"
packages = [{include = "order_service"}]

[tool.poetry.dependencies]
python = ">=3.12,<3.14"


# Core Application Stack
fastapi = ">=0.110.0"
uvicorn = {extras = ["standard"], version = ">=0.23.2"}
sqlalchemy = ">=2.0.21"
psycopg2-binary = ">=2.9.7"

# Asynchronous Communication
confluent-kafka = ">=2.2.0"

# Production Readiness & Monitoring
pydantic-settings = ">=2.0.0"
pybreaker = ">=0.6.0"
prometheus-client = ">=0.17.1"
httpx = ">=0.27.0"  

[tool.poetry.group.dev.dependencies]
# Code Quality & Linting
ruff = "^0.9.0"
pre-commit = "^3.7.1"


# Testing Framework & Plugins
pytest = "^8.0.0"
pytest-asyncio = ">=0.25.3"
pytest-cov = ">=6.0.0"
pytest-mock = ">=3.14.0"

# Database Migrations
alembic = ">=1.13.0"


# --- Project Configurations ---
pytest-dotenv = "^0.5.2"
python-jose = "^3.5.0"
[tool.ruff]
line-length = 99
target-version = "py312"

[tool.ruff.lint]
select = ["B", "C", "E", "F", "W", "B9"]
fixable = ["ALL"]
unfixable = ["B"]

[tool.ruff.lint.pycodestyle]
max-doc-length = 99

[build-system]
requires = ["poetry-core>=2.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "session"